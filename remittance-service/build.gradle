plugins {
    id 'org.springframework.boot' version('2.5.2')
    id 'java'
    id 'com.palantir.docker' version '0.25.0'
}
ext{
    axonVersion = "4.6.0"
}

compileJava {
    sourceCompatibility = 11
    targetCompatibility = 11
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'com.fastcampuspay.remittance'
version '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation group: 'io.springfox', name: 'springfox-swagger-ui',version: '2.9.2'
    implementation group: 'io.springfox', name: 'springfox-swagger2',version: '2.9.2'
    testImplementation 'com.tngtech.archunit:archunit:1.0.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.jetbrains:annotations:23.0.0'
    implementation project(path: ':common')

    testImplementation 'junit:junit:4.13.1'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
}

test {
    useJUnitPlatform()
}

// gradle build 과정에서 docker 이미지도 생성되게 하려고 추가
docker {
    println(tasks.bootJar.outputs.files)
    // - 이미지 이름. rootProject.name 에 대문자가 있어 docker 이미지 이름으로 사용할 수 없다.
    name 'fcampay'+'-'+project.name + ':' + version
    // - 사용할 Dockerfile
    dockerfile file('../Dockerfile')
    // - 복사할 파일들
    files tasks.bootJar.outputs.files
    // - Dockerfile 에 전달할 파라미터
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}
